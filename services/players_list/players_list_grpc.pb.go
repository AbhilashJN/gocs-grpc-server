// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package players_list

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PlayersListServiceClient is the client API for PlayersListService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PlayersListServiceClient interface {
	GetPlayersList(ctx context.Context, in *PlayersListRequest, opts ...grpc.CallOption) (*PlayersListResponse, error)
}

type playersListServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPlayersListServiceClient(cc grpc.ClientConnInterface) PlayersListServiceClient {
	return &playersListServiceClient{cc}
}

func (c *playersListServiceClient) GetPlayersList(ctx context.Context, in *PlayersListRequest, opts ...grpc.CallOption) (*PlayersListResponse, error) {
	out := new(PlayersListResponse)
	err := c.cc.Invoke(ctx, "/players_list.PlayersListService/GetPlayersList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlayersListServiceServer is the server API for PlayersListService service.
// All implementations must embed UnimplementedPlayersListServiceServer
// for forward compatibility
type PlayersListServiceServer interface {
	GetPlayersList(context.Context, *PlayersListRequest) (*PlayersListResponse, error)
	mustEmbedUnimplementedPlayersListServiceServer()
}

// UnimplementedPlayersListServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPlayersListServiceServer struct {
}

func (UnimplementedPlayersListServiceServer) GetPlayersList(context.Context, *PlayersListRequest) (*PlayersListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlayersList not implemented")
}
func (UnimplementedPlayersListServiceServer) mustEmbedUnimplementedPlayersListServiceServer() {}

// UnsafePlayersListServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PlayersListServiceServer will
// result in compilation errors.
type UnsafePlayersListServiceServer interface {
	mustEmbedUnimplementedPlayersListServiceServer()
}

func RegisterPlayersListServiceServer(s grpc.ServiceRegistrar, srv PlayersListServiceServer) {
	s.RegisterService(&PlayersListService_ServiceDesc, srv)
}

func _PlayersListService_GetPlayersList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayersListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayersListServiceServer).GetPlayersList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/players_list.PlayersListService/GetPlayersList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayersListServiceServer).GetPlayersList(ctx, req.(*PlayersListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PlayersListService_ServiceDesc is the grpc.ServiceDesc for PlayersListService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PlayersListService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "players_list.PlayersListService",
	HandlerType: (*PlayersListServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPlayersList",
			Handler:    _PlayersListService_GetPlayersList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/players_list/players_list.proto",
}
